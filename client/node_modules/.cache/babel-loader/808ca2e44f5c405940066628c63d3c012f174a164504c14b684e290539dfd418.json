{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melkote\\\\Downloads\\\\NearFinalProjectBACSHOTSONME123-main\\\\NearFinalProjectBACSHOTSONME123-main\\\\client\\\\src\\\\pages\\\\SpeechTest.js\",\n  _s = $RefreshSig$();\n// client/src/pages/SpeechTest.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport './SpeechTest.css';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sentences = [\"Zebra zoomed zig-zagging zealously.\", \"He yawned yellow yesterday.\", \"Wolves wandered westward, waiting.\", \"Fuzzy Wuzzy was a bear, Fuzzy Wuzzy had no hair.\", \"Uptown umbrellas underlined urban unity.\", \"Baa, baa, black sheep, have you any wool?\", \"Snakes slithered silently, sliding south.\", \"Ravens roamed randomly, resting.\", \"Quick quails quietly questioned.\", \"Peter Piper picked a peck of pickled peppers.\", \"How much wood would a woodchuck chuck, if a woodchuck could chuck wood?\", \"She sells seashells by the seashore.\"];\n\n// Simple Levenshtein distance function\nfunction levenshtein(a, b) {\n  const matrix = [];\n  const aLen = a.length;\n  const bLen = b.length;\n  if (aLen === 0) return bLen;\n  if (bLen === 0) return aLen;\n\n  // initialize matrix\n  for (let i = 0; i <= bLen; i++) {\n    matrix[i] = [i];\n  }\n  for (let j = 0; j <= aLen; j++) {\n    matrix[0][j] = j;\n  }\n  for (let i = 1; i <= bLen; i++) {\n    for (let j = 1; j <= aLen; j++) {\n      if (b.charAt(i - 1).toLowerCase() === a.charAt(j - 1).toLowerCase()) {\n        matrix[i][j] = matrix[i - 1][j - 1];\n      } else {\n        matrix[i][j] = Math.min(matrix[i - 1][j] + 1,\n        // deletion\n        matrix[i][j - 1] + 1,\n        // insertion\n        matrix[i - 1][j - 1] + 1 // substitution\n        );\n      }\n    }\n  }\n  return matrix[bLen][aLen];\n}\nfunction similarityPercentage(str1, str2) {\n  const distance = levenshtein(str1, str2);\n  const maxLen = Math.max(str1.length, str2.length);\n  if (maxLen === 0) return 100;\n  return (maxLen - distance) / maxLen * 100;\n}\nexport default function SpeechTest() {\n  _s();\n  const [testSentence, setTestSentence] = useState('');\n  const [resultText, setResultText] = useState('');\n  const [similarity, setSimilarity] = useState(null);\n  const [message, setMessage] = useState('');\n  const [testStarted, setTestStarted] = useState(false);\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    // Pick a random sentence on mount\n    const randomSentence = sentences[Math.floor(Math.random() * sentences.length)];\n    setTestSentence(randomSentence);\n  }, []);\n  const startTest = () => {\n    setResultText('');\n    setSimilarity(null);\n    setMessage('');\n    setTestStarted(true);\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      setMessage(\"Sorry, your browser does not support speech recognition.\");\n      setTestStarted(false);\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setResultText(transcript);\n      const sim = similarityPercentage(testSentence, transcript);\n      setSimilarity(sim.toFixed(2));\n      if (sim < 75) {\n        setMessage(\"You might be drunk. Try again.\");\n      } else {\n        setMessage(\"Well done! You said it clearly.\");\n      }\n    };\n    recognition.onerror = event => {\n      setMessage(\"Error during recognition: \" + event.error);\n    };\n    recognition.start();\n    recognitionRef.current = recognition;\n\n    // Stop recognition after 10 seconds\n    setTimeout(() => {\n      recognition.stop();\n      setTestStarted(false);\n    }, 10000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"speech-test-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onSignOut: () => {\n        localStorage.removeItem('bacshotsUser');\n        window.location.href = '/signin';\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speech-test-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Speech Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instruction\",\n        children: \"You have 10 seconds to say the sentence below:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-sentence\",\n        children: testSentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-btn\",\n        onClick: startTest,\n        disabled: testStarted,\n        children: testStarted ? \"Listening...\" : \"Start Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), resultText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your Speech: \", /*#__PURE__*/_jsxDEV(\"em\", {\n            children: resultText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Match Percentage: \", similarity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeechTest, \"qDQl22X06eW+xYeVqU/7nf0QaLc=\");\n_c = SpeechTest;\nvar _c;\n$RefreshReg$(_c, \"SpeechTest\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","jsxDEV","_jsxDEV","sentences","levenshtein","a","b","matrix","aLen","length","bLen","i","j","charAt","toLowerCase","Math","min","similarityPercentage","str1","str2","distance","maxLen","max","SpeechTest","_s","testSentence","setTestSentence","resultText","setResultText","similarity","setSimilarity","message","setMessage","testStarted","setTestStarted","recognitionRef","randomSentence","floor","random","startTest","SpeechRecognition","window","webkitSpeechRecognition","recognition","lang","interimResults","maxAlternatives","onresult","event","transcript","results","sim","toFixed","onerror","error","start","current","setTimeout","stop","className","children","onSignOut","localStorage","removeItem","location","href","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/melkote/Downloads/NearFinalProjectBACSHOTSONME123-main/NearFinalProjectBACSHOTSONME123-main/client/src/pages/SpeechTest.js"],"sourcesContent":["// client/src/pages/SpeechTest.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './SpeechTest.css';\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst sentences = [\r\n  \"Zebra zoomed zig-zagging zealously.\",\r\n  \"He yawned yellow yesterday.\",\r\n  \"Wolves wandered westward, waiting.\",\r\n  \"Fuzzy Wuzzy was a bear, Fuzzy Wuzzy had no hair.\",\r\n  \"Uptown umbrellas underlined urban unity.\",\r\n  \"Baa, baa, black sheep, have you any wool?\",\r\n  \"Snakes slithered silently, sliding south.\",\r\n  \"Ravens roamed randomly, resting.\",\r\n  \"Quick quails quietly questioned.\",\r\n  \"Peter Piper picked a peck of pickled peppers.\",\r\n  \"How much wood would a woodchuck chuck, if a woodchuck could chuck wood?\",\r\n  \"She sells seashells by the seashore.\"\r\n];\r\n\r\n// Simple Levenshtein distance function\r\nfunction levenshtein(a, b) {\r\n  const matrix = [];\r\n  const aLen = a.length;\r\n  const bLen = b.length;\r\n  if (aLen === 0) return bLen;\r\n  if (bLen === 0) return aLen;\r\n\r\n  // initialize matrix\r\n  for (let i = 0; i <= bLen; i++) {\r\n    matrix[i] = [i];\r\n  }\r\n  for (let j = 0; j <= aLen; j++) {\r\n    matrix[0][j] = j;\r\n  }\r\n\r\n  for (let i = 1; i <= bLen; i++) {\r\n    for (let j = 1; j <= aLen; j++) {\r\n      if (b.charAt(i - 1).toLowerCase() === a.charAt(j - 1).toLowerCase()) {\r\n        matrix[i][j] = matrix[i - 1][j - 1];\r\n      } else {\r\n        matrix[i][j] = Math.min(\r\n          matrix[i - 1][j] + 1,    // deletion\r\n          matrix[i][j - 1] + 1,    // insertion\r\n          matrix[i - 1][j - 1] + 1 // substitution\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return matrix[bLen][aLen];\r\n}\r\n\r\nfunction similarityPercentage(str1, str2) {\r\n  const distance = levenshtein(str1, str2);\r\n  const maxLen = Math.max(str1.length, str2.length);\r\n  if (maxLen === 0) return 100;\r\n  return ((maxLen - distance) / maxLen) * 100;\r\n}\r\n\r\nexport default function SpeechTest() {\r\n  const [testSentence, setTestSentence] = useState('');\r\n  const [resultText, setResultText] = useState('');\r\n  const [similarity, setSimilarity] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [testStarted, setTestStarted] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Pick a random sentence on mount\r\n    const randomSentence = sentences[Math.floor(Math.random() * sentences.length)];\r\n    setTestSentence(randomSentence);\r\n  }, []);\r\n\r\n  const startTest = () => {\r\n    setResultText('');\r\n    setSimilarity(null);\r\n    setMessage('');\r\n    setTestStarted(true);\r\n\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n      setMessage(\"Sorry, your browser does not support speech recognition.\");\r\n      setTestStarted(false);\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = 'en-US';\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setResultText(transcript);\r\n      const sim = similarityPercentage(testSentence, transcript);\r\n      setSimilarity(sim.toFixed(2));\r\n      if (sim < 75) {\r\n        setMessage(\"You might be drunk. Try again.\");\r\n      } else {\r\n        setMessage(\"Well done! You said it clearly.\");\r\n      }\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      setMessage(\"Error during recognition: \" + event.error);\r\n    };\r\n\r\n    recognition.start();\r\n    recognitionRef.current = recognition;\r\n\r\n    // Stop recognition after 10 seconds\r\n    setTimeout(() => {\r\n      recognition.stop();\r\n      setTestStarted(false);\r\n    }, 10000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"speech-test-container\">\r\n      <Navbar onSignOut={() => {\r\n        localStorage.removeItem('bacshotsUser');\r\n        window.location.href = '/signin';\r\n      }} />\r\n      <div className=\"speech-test-content\">\r\n        <h1>Speech Test</h1>\r\n        <p className=\"instruction\">You have 10 seconds to say the sentence below:</p>\r\n        <div className=\"test-sentence\">{testSentence}</div>\r\n        <button className=\"start-btn\" onClick={startTest} disabled={testStarted}>\r\n          {testStarted ? \"Listening...\" : \"Start Test\"}\r\n        </button>\r\n        {resultText && (\r\n          <div className=\"result\">\r\n            <p>Your Speech: <em>{resultText}</em></p>\r\n            <p>Match Percentage: {similarity}%</p>\r\n            <p>{message}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}